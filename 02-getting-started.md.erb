---
title: Başlarken
slug: getting-started
date: 0001/01/01
number: 2
contents: Meteor Kurulumu. | Meteor paketlerinin 5 farklı tipini öğreniyoruz. | Meteor uygulamanızın dosya yapısını ayarlayalım.
paragraphs: 49
---

 İlk izlenimler her zaman çok önemlidir, ve Meteor'un kurulumu da nispeten sancısız olmalı. Çoğu durumda uygulamanın kurulumu ve ayağa kalkması 5 dakikadan daha kısa sürer.

 Meteor'a başlarken, eğer Mac OS veya Linux kullanıyorsanız terminal penceresini açın ve şunları yazın:

~~~bash
$ curl https://install.meteor.com | sh
~~~

Eğer Windows kullanıyorsanız, Meteor sitesindeki [kurulum rehberini](https://www.meteor.com/install) inceleyebilirsiniz.

Bu işlem sisteminize `meteor` çalıştırılabilir dosyasını kuracak ve kullanıma hazır hale getirecek.

<% note do %>

### Meteor'un Kurmadan

Eğer meteor'u lokale kuramıyorsan (ya da kurmak istemiyorsan) sana [Nitrous.io](http://nitrous.io)'a bir göz atmanı öneriyoruz.

Nitrous.io uygulamanı hızlıca ayağa kaldırabildiğin ve kodlarını tarayıcıda düzenleyebildiğin bir servistir, ve biz ayarlarını nasıl yapacağın hakkında sana yardımcı olabilecek [kısa bir açıklama](https://www.discovermeteor.com/blog/meteor-nitrous) hazırladık.

Bu rehberi ve "Meteor kurulumu" bölümünü takip ettikten sonra bu bölümdeki "Basit bir uygulama yaratmak" (“Creating a Simple App”) kısmına geçebilirsin.

<% end %>

### Basit bir uygulama yaratmak

Şu an meteor kurulumunu tamamladık, hadi bir uygulama yaratalım. Yapmamız gereken Meteor'un komut satırını kullanmak:

~~~bash
meteor create microscope
~~~

Bu komut meteoru indirecek ve basit kurulumunu hazırlayacak. Herşey tamamlandıktan sonra göreceğin dizin şu şekilde olmalı `microscope/` ve aşağıdaki dizinleri/dosyaları içermeli:

~~~bash
 .meteor
microscope.css
microscope.html
microscope.js
~~~

Meteor tarafından oluşturulan bu basit uygulama aslında size basit bir Meteor uygulamasının parçalarını gösteren bir boilerplate (örnek) uygulamadır.

Bu uygulamanın aslında çok bir özelliği olmasa da, çalıştırılabilir bir uygulamadır. Çalıştırmak için komut satırına gidip şunu yazabilirsiniz:

~~~bash
cd microscope
meteor
~~~

Şimdi tarayıcınızda `http://localhost:3000/` (ya da `http://0.0.0.0:3000/`) adresini açarak bu örnek uygulamayı test edebilirsiniz:

<%= screenshot "2-1", "Meteor'un Hello World uygulaması." %>

<%= commit "2-1", "Basit microscope projesi oluşturuldu." %>

Tebrikler! İlk Meteor uygulamanızı yaptınız. Bu arada, uygulamanızı durdurmak için komut satırında `ctrl+c` ye basabilirsiniz.

Eğer Git kullanıyorsanız, uygulamanızı repo ya sabitlemek için tam zamanı. Bunun için monut satırında `git init` yazmanız yeterli.

<% note do %>

### Güle güle Meteorite

Bir zamanlar Meteor projesi Meteorite isimli harici bir paket yöneticisi kullanıyordu. Meteor versiyon 0.9.0 dan beri, bu araç Meteor'un içine gömüldüğü için harici bir paket yöneticisine gerek kalmamıştır.

Eğer bu kitap boyunca Meteorite'nin `mrt` komut satırı aracı ile ilgili herhangi bir referansa rastlarsanız, bu komutu güvenli bir şekilde `meteor` komutu ile değiştirebilirsiniz.

<% end %>


### Paket ekleyelim

////

~~~bash
meteor add bootstrap
~~~

<%= commit "2-2", "Bootstrap paketi eklendi" %>

<% note do %>

### Paketler konusunda bir not

////

- ////
- ////
- ////
- ////
- ////

<% end %>

### Meteor uygulamaları için dosya yapısı

////

////

////

- ////
- ////
- ////
- ////
- ////
- ////

////

////

<% note do %>

### Meteor'un mimarisi MVC mi?

////

////

<% end %>

### Genel değil?

////

////

<% note do %>

### Underscores vs CamelCase

////

////

////

<% end %>

### CSS Müdahaleleri

////

////

~~~css
.grid-block, .main, .post, .comments li, .comment-form {
    background: #fff;
    border-radius: 3px;
    padding: 10px;
    margin-bottom: 10px;
    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15);
}
body {
    background: #eee;
    color: #666666;
}
.navbar { margin-bottom: 10px }
.navbar .navbar-inner {
    border-radius: 0px 0px 3px 3px;
}
#spinner { height: 300px }
.post {
    *zoom: 1;
    -webkit-transition: all 300ms 0ms;
    -webkit-transition-delay: ease-in;
    -moz-transition: all 300ms 0ms ease-in;
    -o-transition: all 300ms 0ms ease-in;
    transition: all 300ms 0ms ease-in;
    position: relative;
    opacity: 1;
}
.post:before, .post:after {
    content: "";
    display: table;
}
.post:after { clear: both }
.post.invisible { opacity: 0 }
.post .upvote {
    display: block;
    margin: 7px 12px 0 0;
    float: left;
}
.post .post-content { float: left }
.post .post-content h3 {
    margin: 0;
    line-height: 1.4;
    font-size: 18px;
}
.post .post-content h3 a {
    display: inline-block;
    margin-right: 5px;
}
.post .post-content h3 span {
    font-weight: normal;
    font-size: 14px;
    display: inline-block;
    color: #aaaaaa;
}
.post .post-content p { margin: 0 }
.post .discuss {
    display: block;
    float: right;
    margin-top: 7px;
}
.comments {
    list-style-type: none;
    margin: 0;
}
.comments li h4 {
    font-size: 16px;
    margin: 0;
}
.comments li h4 .date {
    font-size: 12px;
    font-weight: normal;
}
.comments li h4 a { font-size: 12px }
.comments li p:last-child { margin-bottom: 0 }
.dropdown-menu span {
    display: block;
    padding: 3px 20px;
    clear: both;
    line-height: 20px;
    color: #bbb;
    white-space: nowrap;
}
.load-more {
    display: block;
    border-radius: 3px;
    background: rgba(0, 0, 0, 0.05);
    text-align: center;
    height: 60px;
    line-height: 60px;
    margin-bottom: 10px;
}
.load-more:hover {
    text-decoration: none;
    background: rgba(0, 0, 0, 0.1);
}
~~~
<%= caption "client/stylesheets/style.css" %>

<%= commit "2-3","Dosya yapısı yeniden düzenlendi." %>

<% note do %>

### Bir not da CoffeeScript için

////

`meteor add coffeescript`

<% end %>
